services:
  rabbitmq:
    image: rabbitmq
    ports:
      - "5672:5672"  
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/.env:/app/.env:ro
      - ./db_data:/app/db # Volume for SQLite database
    environment:
      - ENV_MODE=local
      # REDIS variables removed
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - GEMINI_API_KEY=${GEMINI_API_KEY} # Sourced from .env file
      - SQLITE_DB_PATH=/app/db/agentpress.db # Path inside the container
      # Removed other old service-specific env vars if any were here
    depends_on:
      # redis removed
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python -m dramatiq run_agent_background # Ensure this entrypoint is correct
    volumes:
      - ./backend/.env:/app/.env:ro
      - ./db_data:/app/db # Volume for SQLite database
    environment:
      - ENV_MODE=local
      # REDIS variables removed
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - GEMINI_API_KEY=${GEMINI_API_KEY} # Sourced from .env file
      - SQLITE_DB_PATH=/app/db/agentpress.db # Path inside the container
      # Removed other old service-specific env vars if any were here
    depends_on:
      # redis removed
      rabbitmq:
        condition: service_healthy

  frontend:
    init: true
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/.env.local:/app/.env.local:ro
    environment:
      - NODE_ENV=production
    command: ["npm", "run", "start"]
    depends_on:
      - backend

volumes:
  db_data: # For SQLite database
  rabbitmq_data:
  # redis_data removed
