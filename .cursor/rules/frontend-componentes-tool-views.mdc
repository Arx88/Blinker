---
description: Os componentes `tool-views` são responsáveis por renderizar a interface de diferentes ferramentas utilizadas pelos agentes, localizados em @components/thread/tool-views.
globs: 
alwaysApply: false
---
# Componentes de Visualização de Ferramentas (Tool Views)

Os componentes `tool-views` são responsáveis por renderizar a interface de diferentes ferramentas utilizadas pelos agentes, localizados em [components/thread/tool-views](mdc:frontend/src/components/thread/tool-views).

## Estrutura dos Componentes

1. **Componentes por Tipo de Ferramenta**
   - [BrowserToolView.tsx](mdc:frontend/src/components/thread/tool-views/BrowserToolView.tsx) - Renderiza resultados de navegação web
   - [CommandToolView.tsx](mdc:frontend/src/components/thread/tool-views/CommandToolView.tsx) - Exibe comandos executados via terminal
   - [DataProviderToolView.tsx](mdc:frontend/src/components/thread/tool-views/DataProviderToolView.tsx) - Mostra dados de provedores externos
   - [ExposePortToolView.tsx](mdc:frontend/src/components/thread/tool-views/ExposePortToolView.tsx) - Interface para portas expostas
   - [FileOperationToolView.tsx](mdc:frontend/src/components/thread/tool-views/FileOperationToolView.tsx) - Exibe operações em arquivos
   - [WebSearchToolView.tsx](mdc:frontend/src/components/thread/tool-views/WebSearchToolView.tsx) - Resultados de busca na web
   - [WebCrawlToolView.tsx](mdc:frontend/src/components/thread/tool-views/WebCrawlToolView.tsx) - Resultados de crawling de sites

2. **Componentes Genéricos**
   - [GenericToolView.tsx](mdc:frontend/src/components/thread/tool-views/GenericToolView.tsx) - Visualização padrão para ferramentas sem visualização específica

3. **Utilitários e Tipos**
   - [types.ts](mdc:frontend/src/components/thread/tool-views/types.ts) - Definições de tipos para as visualizações de ferramentas
   - [utils.ts](mdc:frontend/src/components/thread/tool-views/utils.ts) - Funções utilitárias compartilhadas

## Convenções de Nomenclatura

1. Os nomes dos componentes seguem o padrão `[ToolName]ToolView.tsx`
2. Cada componente deve corresponder a uma ferramenta no backend em `backend/agent/tools/`
3. Use PascalCase para nomes de componentes e interfaces

## Estrutura dos Componentes

1. Estrutura básica de um componente tool-view:
   ```tsx
   import { FC } from "react";
   import { ToolViewProps } from "./types";
   
   export const ExampleToolView: FC<ToolViewProps> = ({ 
     call,
     result,
     loading
   }) => {
     // Renderização da visualização da ferramenta
     return (
       <div className="tool-view">
         {/* Conteúdo da visualização */}
       </div>
     );
   };
   ```

2. Organização padrão:
   - Tipagem e validação de dados
   - Processamento de resultados
   - Renderização da interface
   - Tratamento de estados (carregamento, erro, vazio)

## Diretrizes de Implementação

1. **Exibição de Dados**
   - Utilize componentes de UI reutilizáveis (cards, listas, tabelas)
   - Formate dados brutos para melhor legibilidade
   - Priorize visualizações condensadas que mostram informações essenciais
   - Ofereça opção de expandir para ver detalhes completos

2. **Estados**
   - Implemente estados de carregamento usando skeletons ou spinners
   - Trate estados de erro com mensagens claras
   - Lide com resultados vazios de forma elegante

3. **Interatividade**
   - Implemente ações relevantes (copiar texto, abrir links)
   - Permita colapsar/expandir seções longas
   - Adicione paginação para resultados extensos
   - Use tooltips para explicar funcionalidades

4. **Acessibilidade**
   - Garanta navegação por teclado
   - Defina rótulos ARIA apropriados
   - Mantenha contraste adequado

## Integração com o Sistema de Threads

1. Os componentes tool-views são renderizados dentro do fluxo de mensagens de um thread
2. Devem seguir o design system para manter consistência visual
3. Devem se adaptar a diferentes tamanhos de tela
4. A renderização é determinada pelo tipo de ferramenta executada

## Extensibilidade

1. Para adicionar uma nova visualização de ferramenta:
   - Crie um novo componente seguindo as convenções de nomenclatura
   - Implemente a interface `ToolViewProps` de `types.ts`
   - Registre o componente no sistema de renderização de ferramentas
   - Adicione testes para cenários principais

