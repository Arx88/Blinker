services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      # redis removed
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    volumes: # Added for SQLite persistence
      - ./db_data_backend:/app/db # Specific volume for this compose file
    environment:
      # REDIS variables removed
      - LOG_LEVEL=INFO
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - GEMINI_API_KEY=${GEMINI_API_KEY} # Sourced from .env
      - SQLITE_DB_PATH=/app/db/agentpress.db # Path inside container
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: "14"
          memory: 48G
        reservations:
          cpus: "8"
          memory: 32G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker-1:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m dramatiq --processes 16 --threads 16 run_agent_background
    env_file:
      - .env
    volumes:
      - .:/app
      - ./worker-1-logs:/app/logs
    restart: unless-stopped
    depends_on:
      # redis removed
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    volumes: # Added for SQLite persistence
      - ./db_data_backend:/app/db # Specific volume for this compose file
    environment:
      # REDIS variables removed
      - LOG_LEVEL=INFO
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - GEMINI_API_KEY=${GEMINI_API_KEY} # Sourced from .env
      - SQLITE_DB_PATH=/app/db/agentpress.db # Path inside container
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: "14"
          memory: 48G
        reservations:
          cpus: "8"
          memory: 32G

  worker-2:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m dramatiq run_agent_background
    env_file:
      - .env
    volumes:
      - .:/app
      - ./worker-2-logs:/app/logs
    restart: unless-stopped
    depends_on:
      # redis removed
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    volumes: # Added for SQLite persistence
      - ./db_data_backend:/app/db # Specific volume for this compose file
    environment:
      # REDIS variables removed
      - LOG_LEVEL=INFO
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - GEMINI_API_KEY=${GEMINI_API_KEY} # Sourced from .env
      - SQLITE_DB_PATH=/app/db/agentpress.db # Path inside container
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: "14"
          memory: 48G
        reservations:
          cpus: "8"
          memory: 32G

  rabbitmq:
    image: rabbitmq
    ports:
      - "127.0.0.1:5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 12G
        reservations:
          cpus: "1"
          memory: 8G

networks:
  app-network:
    driver: bridge

volumes:
  db_data_backend: # For SQLite persistence in this compose context
  rabbitmq_data:
  # redis_data removed
